From 2dc63d309c7dd578ea03f09bd86f57010fccc89b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marco=20Trevisan=20=28Trevi=C3=B1o=29?= <mail@3v1n0.net>
Date: Thu, 27 Feb 2020 23:27:23 +0100
Subject: [PATCH 13/36] appIconIndicators: Make the count badge text size
 relative to icon size

We were using the actual icon container size while we can just use the same
strategy everywhere and compute the badge size and margin depending on the
current icon size.

This fixes cases where the text was ellipsized wrongly
---
 appIconIndicators.js | 45 +++++++++++++++++++++++++++++---------------
 1 file changed, 30 insertions(+), 15 deletions(-)

diff --git a/appIconIndicators.js b/appIconIndicators.js
index f965829..088e024 100644
--- a/appIconIndicators.js
+++ b/appIconIndicators.js
@@ -4,6 +4,7 @@ const Clutter = imports.gi.Clutter;
 const GdkPixbuf = imports.gi.GdkPixbuf
 const Gio = imports.gi.Gio;
 const Gtk = imports.gi.Gtk;
+const Main = imports.ui.main;
 const Pango = imports.gi.Pango;
 const Shell = imports.gi.Shell;
 const St = imports.gi.St;
@@ -664,11 +665,12 @@ var UnityIndicator = class DashToDock_UnityIndicator extends IndicatorBase {
             x_expand: true, y_expand: true
         });
         this._notificationBadgeLabel.add_style_class_name('notification-badge');
+        this._notificationBadgeLabel.clutter_text.ellipsize = Pango.EllipsizeMode.MIDDLE;
         this._notificationBadgeCount = 0;
         this._notificationBadgeBin.hide();
 
         this._source._iconContainer.add_child(this._notificationBadgeBin);
-        this._source._iconContainer.connect('allocation-changed', this.updateNotificationBadge.bind(this));
+        this.updateNotificationBadgeStyle();
 
         this._remoteEntries = [];
         this._source.remoteModel.lookupById(this._source.app.id).forEach(
@@ -685,6 +687,14 @@ var UnityIndicator = class DashToDock_UnityIndicator extends IndicatorBase {
             this._source.remoteModel,
             'entry-removed',
             this._onLauncherEntryRemoteRemoved.bind(this)
+        ], [
+            St.ThemeContext.get_for_stage(global.stage),
+            'changed',
+            this.updateNotificationBadgeStyle.bind(this)
+        ], [
+            this._source._iconContainer,
+            'notify::size',
+            this.updateNotificationBadgeStyle.bind(this)
         ])
     }
 
@@ -705,20 +715,27 @@ var UnityIndicator = class DashToDock_UnityIndicator extends IndicatorBase {
         }
     }
 
-    updateNotificationBadge() {
-        let scaleFactor = St.ThemeContext.get_for_stage(global.stage).scale_factor;
-        let [minWidth, natWidth] = this._source._iconContainer.get_preferred_width(-1);
-        let logicalNatWidth = natWidth / scaleFactor;
-        let font_size = Math.max(10, Math.round(logicalNatWidth / 5));
-        let margin_left = Math.round(logicalNatWidth / 4);
+    updateNotificationBadgeStyle() {
+        let themeContext = St.ThemeContext.get_for_stage(global.stage);
+        let fontDesc = themeContext.get_font();
+        let defaultFontSize = fontDesc.get_size() / 1024;
+        let fontSize = defaultFontSize * 0.9;
+        let iconSize = Main.overview.dash.iconSize;
+        let defaultIconSize = Docking.DockManager.settings.get_default_value(
+            'dash-max-icon-size').unpack();
+
+        if (!fontDesc.get_size_is_absolute()) {
+            // fontSize was exprimed in points, so convert to pixel
+            fontSize /= 0.75;
+        }
+
+        fontSize = Math.round((iconSize / defaultIconSize) * fontSize);
+        let leftMargin = Math.round((iconSize / defaultIconSize) * 3);
 
         this._notificationBadgeLabel.set_style(
-           'font-size: ' + font_size + 'px;' +
-           'margin-left: ' + margin_left + 'px;'
+            'font-size: ' + fontSize + 'px;' +
+            'margin-left: ' + leftMargin + 'px'
         );
-
-        this._notificationBadgeBin.width = Math.round(logicalNatWidth - margin_left);
-        this._notificationBadgeLabel.clutter_text.ellipsize = Pango.EllipsizeMode.MIDDLE;
     }
 
     _notificationBadgeCountToText(count) {
@@ -749,10 +766,8 @@ var UnityIndicator = class DashToDock_UnityIndicator extends IndicatorBase {
     }
 
     toggleNotificationBadge(activate) {
-        if (activate && this._notificationBadgeCount > 0) {
-            this.updateNotificationBadge();
+        if (activate && this._notificationBadgeCount > 0)
             this._notificationBadgeBin.show();
-        }
         else
             this._notificationBadgeBin.hide();
     }
-- 
2.25.1

