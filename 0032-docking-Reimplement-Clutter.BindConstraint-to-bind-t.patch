From f43f517bee1dafc07d95ff541457be5e2f26343b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marco=20Trevisan=20=28Trevi=C3=B1o=29?= <mail@3v1n0.net>
Date: Tue, 17 Mar 2020 14:13:13 +0100
Subject: [PATCH 32/36] docking: Reimplement Clutter.BindConstraint to bind to
 Maximum size only

With mutter commit 4f8e518d4 BindConstraint is applied in a way that the
source sizes are always applied to the bound widget, no matter if we need
to constrain it or not.

So reimplement Clutter.BindConstraint in the dock, although this needs a fix
in gjs that will be available only starting from gjs 1.65.2, so we need to
check for that first.

See more at:
 https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1070
---
 docking.js | 35 ++++++++++++++++++++++++++++++++++-
 1 file changed, 34 insertions(+), 1 deletion(-)

diff --git a/docking.js b/docking.js
index 2712037..173c225 100644
--- a/docking.js
+++ b/docking.js
@@ -160,6 +160,39 @@ var DashSlideContainer = GObject.registerClass({
     }
 });
 
+let DockBindConstraint = Clutter.BindConstraint;
+if (imports.system.version > 16501) {
+    DockBindConstraint = GObject.registerClass(
+    class DockBindConstraint extends Clutter.BindConstraint {
+
+        vfunc_update_preferred_size(_actor, direction, forSize, minimumSize, naturalSize) {
+            let getPreferredSize = null;
+
+            if (direction == Clutter.Orientation.HORIZONTAL) {
+                if (this.coordinate != Clutter.BindCoordinate.HEIGHT) {
+                    getPreferredSize = this.source.get_preferred_width.bind(
+                        this.source);
+                    }
+            } else if (direction == Clutter.Orientation.VERTICAL) {
+                if (this.coordinate != Clutter.BindCoordinate.WIDTH) {
+                    getPreferredSize = this.source.get_preferred_height.bind(
+                        this.source);
+                    }
+            }
+
+            if (getPreferredSize) {
+                let [prefMinimum, prefNatural] = getPreferredSize(forSize);
+                if (naturalSize < prefNatural)
+                    return [minimumSize, naturalSize];
+                else
+                    return [prefMinimum, prefNatural];
+            }
+
+            return super.vfunc_update_preferred_size(...arguments);
+        }
+    });
+}
+
 var DockedDash = GObject.registerClass({
     Signals: {
         'showing': {},
@@ -374,7 +407,7 @@ var DockedDash = GObject.registerClass({
 
         // Create and apply height/width constraint to the dash.
         // It's controlled by this.height or this.width
-        this._constrainSize = new Clutter.BindConstraint({
+        this._constrainSize = new DockBindConstraint({
             source: this,
             coordinate: this._isHorizontal ?
                 Clutter.BindCoordinate.WIDTH : Clutter.BindCoordinate.HEIGHT
-- 
2.25.1

